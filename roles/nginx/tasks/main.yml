---
- name: Install Nginx
  apt:
    name: nginx
    state: present

- name: Remove default Nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: restart nginx

- name: Create Nginx configuration
  template:
    src: nginx-app.conf.j2
    dest: "/etc/nginx/sites-available/{{ app_name }}"
    owner: root
    group: root
    mode: '0644'
  notify: restart nginx

- name: Enable Nginx site
  file:
    src: "/etc/nginx/sites-available/{{ app_name }}"
    dest: "/etc/nginx/sites-enabled/{{ app_name }}"
    state: link
  notify: restart nginx

- name: Configure Nginx main config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart nginx

- name: Ensure Nginx is started and enabled
  systemd:
    name: nginx
    state: started
    enabled: yes

- name: Install Certbot for Let's Encrypt
  apt:
    name:
      - certbot
      - python3-certbot-nginx
    state: present
  when: ssl_enabled | default(false)

- name: Check if certificate exists
  stat:
    path: "/etc/letsencrypt/live/{{ ssl_domains[0] }}/fullchain.pem"
  register: cert_exists
  when: ssl_enabled | default(false)

- name: Obtain SSL certificate
  command: >
    certbot --nginx -d {{ ssl_domains | join(' -d ') }}
    --non-interactive --agree-tos -m {{ ssl_certbot_email }}
    --redirect
  when:
    - ssl_enabled | default(false)
    - not cert_exists.stat.exists
    - ssl_domains[0] != 'myapp.example.com'

- name: Setup Certbot renewal cron
  cron:
    name: "Certbot renewal"
    minute: "0"
    hour: "3"
    job: "certbot renew --quiet --post-hook 'systemctl reload nginx'"
  when: ssl_enabled | default(false)
