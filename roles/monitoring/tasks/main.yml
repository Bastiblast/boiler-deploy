---
# Install Node Exporter for Prometheus
- name: Create node_exporter user
  user:
    name: node_exporter
    system: yes
    shell: /bin/false
    create_home: no

- name: Download Node Exporter
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v1.7.0/node_exporter-1.7.0.linux-amd64.tar.gz"
    dest: /tmp/node_exporter.tar.gz
    mode: '0644'

- name: Extract Node Exporter
  unarchive:
    src: /tmp/node_exporter.tar.gz
    dest: /tmp/
    remote_src: yes

- name: Copy Node Exporter binary
  copy:
    src: /tmp/node_exporter-1.7.0.linux-amd64/node_exporter
    dest: /usr/local/bin/node_exporter
    remote_src: yes
    owner: node_exporter
    group: node_exporter
    mode: '0755'

- name: Create Node Exporter systemd service
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: '0644'
  notify: restart node_exporter

- name: Start and enable Node Exporter
  systemd:
    name: node_exporter
    state: started
    enabled: yes
    daemon_reload: yes

- name: Install Prometheus (on monitoring host)
  block:
    - name: Create prometheus user
      user:
        name: prometheus
        system: yes
        shell: /bin/false
        create_home: no

    - name: Create Prometheus directories
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: '0755'
      loop:
        - /etc/prometheus
        - /var/lib/prometheus

    - name: Download Prometheus
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v2.48.0/prometheus-2.48.0.linux-amd64.tar.gz"
        dest: /tmp/prometheus.tar.gz
        mode: '0644'

    - name: Extract Prometheus
      unarchive:
        src: /tmp/prometheus.tar.gz
        dest: /tmp/
        remote_src: yes

    - name: Copy Prometheus binaries
      copy:
        src: "/tmp/prometheus-2.48.0.linux-amd64/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        remote_src: yes
        owner: prometheus
        group: prometheus
        mode: '0755'
      loop:
        - prometheus
        - promtool

    - name: Copy Prometheus console files
      copy:
        src: "/tmp/prometheus-2.48.0.linux-amd64/{{ item }}"
        dest: "/etc/prometheus/{{ item }}"
        remote_src: yes
        owner: prometheus
        group: prometheus
        mode: '0755'
      loop:
        - consoles
        - console_libraries

    - name: Create Prometheus configuration
      template:
        src: prometheus.yml.j2
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
        mode: '0644'
      notify: restart prometheus

    - name: Create Prometheus systemd service
      template:
        src: prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
        owner: root
        group: root
        mode: '0644'
      notify: restart prometheus

    - name: Start and enable Prometheus
      systemd:
        name: prometheus
        state: started
        enabled: yes
        daemon_reload: yes

  when: "'monitoring' in group_names"

- name: Install Grafana (on monitoring host)
  block:
    - name: Add Grafana GPG key
      apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Add Grafana repository
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present
        filename: grafana

    - name: Install Grafana
      apt:
        name: grafana
        state: present
        update_cache: yes

    - name: Configure Grafana
      template:
        src: grafana.ini.j2
        dest: /etc/grafana/grafana.ini
        owner: root
        group: grafana
        mode: '0640'
      notify: restart grafana

    - name: Start and enable Grafana
      systemd:
        name: grafana-server
        state: started
        enabled: yes

  when: "'monitoring' in group_names"
